1. python 自带回收机制, 开发者无需将大量精力花费在内存泄漏这个问题上

2. python 使用引用机制进行垃圾回收, 一旦一个变量引用数量为零, 则系统自动从内存中销毁变量

3. 对于循环引用python 提供了标记-清除机制, 对下面两个问题的解答,正是对该机制的说明.

a=[1,2]#假设此时a的引用为1
b=[3,4]#假设此时b的引用为1
#循环引用
a.append(b)#b的引用+1=2
b.append(a)//a的引用+1=2
假如现在需要删除a,应该如何回收呢？
c=[5,6]#假设此时c的引用为1
d=[7,8]#假设此时d的引用为1
#循环引用
c.append(d)#c的引用+1=2
d.append(c)#d的引用+1=2
假如现在需要同时删除c、d，应该如何回收呢？

标记-清除机制步骤如下:
    标记阶段: 将所有对象引用计数减一, 引用为零放入死亡容器, 引用不为零放入存活容器.
    清除阶段: 若存活容器中变量没有引用死亡容器中的变量, 则清除死亡容器中的所有变量; 若存活容器中引用死亡容器中变量, 则将死亡容器中的变量取出,
    放回存活容器, 清除死亡容器中其他所有变量.

分代收集: 对于执行一次标记-清楚之后存活的变量,将其代数加一(初始代数为零), 代数越高,则执行标记-清除机制的概率越小, 从而提高标记-清除机制效率.